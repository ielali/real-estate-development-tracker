# Netlify Configuration for Real Estate Development Tracker
# Documentation: https://docs.netlify.com/configure-builds/file-based-configuration/

[build]
  # Build command with full CI pipeline: lint, type-check, test, migrate, build
  command = """
    cd apps/web && \
    echo '🔍 Running Linting...' && \
    bun run lint && \
    echo '✅ Linting passed' && \
    echo '' && \
    echo '📝 Running Type Check...' && \
    bun run type-check && \
    echo '✅ Type check passed' && \
    echo '' && \
    echo '🧪 Running Tests...' && \
    bun run test:run && \
    echo '✅ Tests passed' && \
    echo '' && \
    echo '🗄️  Running Database Migration...' && \
    bun run db:migrate && \
    echo '✅ Migration completed' && \
    echo '' && \
    echo '🏗️  Building Application...' && \
    bun run build && \
    echo '✅ Build completed' && \
    echo '' && \
    echo '📊 Analyzing Bundle Size...' && \
    du -sh .next && \
    echo '✅ CI Pipeline Complete!'
  """

  # Publish directory (relative to repo root)
  publish = "apps/web/.next"

  # Base directory for the build
  base = "/"

[build.environment]
  # Node.js version
  NODE_VERSION = "22"

  # Use Bun as package manager
  NPM_FLAGS = "--version"

# Install command override
[build.processing]
  skip_processing = false

# Netlify Lighthouse Plugin for automated performance testing
# Note: Lighthouse plugin requires a paid Netlify plan
# [[plugins]]
#   package = "@netlify/plugin-lighthouse"
#
#   # Lighthouse audit configuration
#   [plugins.inputs]
#     # Performance thresholds (0-1 scale, fail build if below these scores)
#     [plugins.inputs.thresholds]
#       performance = 0.85
#       accessibility = 1.0
#       best-practices = 0.95
#       seo = 0.90
#
#     # Fail build if thresholds are not met
#     fail_deploy_on_score_thresholds = true
#
#     # Output path for Lighthouse reports
#     output_path = "apps/web/lighthouse-reports"

# Redirect rules
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# Headers for security
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"

# Functions configuration (for Next.js API routes)
[functions]
  directory = "apps/web/.netlify/functions"
  node_bundler = "esbuild"

# Dev server configuration
[dev]
  command = "bun run dev"
  port = 8888
  targetPort = 3000
  framework = "next"
  autoLaunch = false

# Context-specific settings
[context.production]
  command = """
    echo '🧹 Clearing Bun cache and all dependencies...' && \
    rm -rf ~/.bun/install/cache node_modules apps/web/node_modules && \
    bun install --no-cache --frozen-lockfile && \
    cd apps/web && \
    echo '🚀 Production Build Pipeline' && \
    bun run lint && \
    bun run type-check && \
    bun run test:run && \
    bun run db:migrate && \
    bun run build && \
    echo '✅ Production build complete'
  """

[context.deploy-preview]
  command = """
    echo '🧹 Clearing Bun cache and all dependencies...' && \
    rm -rf ~/.bun/install/cache node_modules apps/web/node_modules && \
    bun install --no-cache --frozen-lockfile && \
    cd apps/web && \
    echo '👀 Deploy Preview Build Pipeline' && \
    bun run lint && \
    bun run type-check && \
    bun run test:component && \
    bun run db:migrate && \
    bun run build && \
    echo '✅ Deploy preview build complete'
  """

[context.branch-deploy]
  command = """
    echo '🧹 Clearing Bun cache and all dependencies...' && \
    rm -rf ~/.bun/install/cache node_modules apps/web/node_modules && \
    bun install --no-cache --frozen-lockfile && \
    cd apps/web && \
    echo '🌿 Branch Deploy Build Pipeline' && \
    bun run lint && \
    bun run type-check && \
    bun run test:component && \
    bun run db:migrate && \
    bun run build && \
    echo '✅ Branch deploy build complete'
  """
