# =============================================================================
# WEB APP ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env.local for local development
# Never commit .env.local to version control
# =============================================================================

# -----------------------------------------------------------------------------
# Database
# -----------------------------------------------------------------------------
# Neon PostgreSQL database URL
# Get from: https://neon.tech
NETLIFY_DATABASE_URL="postgresql://username:password@host.neon.tech/database?sslmode=require"

# -----------------------------------------------------------------------------
# Authentication (Better-auth)
# -----------------------------------------------------------------------------
# Secret key for session encryption (min 32 characters)
# Generate: openssl rand -base64 32
# IMPORTANT: Use different secrets for dev/prod
BETTER_AUTH_SECRET="your-auth-secret-here-min-32-chars-long"

# Application base URL (used for auth callbacks and redirects)
# Must match your application URL
# NEXT_PUBLIC_ prefix exposes this to the browser
NEXT_PUBLIC_APP_URL="http://localhost:3000"

# -----------------------------------------------------------------------------
# Email Service (Resend)
# -----------------------------------------------------------------------------
# Resend API key for transactional emails
# Sign up at: https://resend.com
# Get API key from: https://resend.com/api-keys
RESEND_API_KEY=""

# Verified sender email (must be verified in Resend)
# For testing: Use onboarding@resend.dev
# For production: Use your verified domain email
RESEND_FROM_EMAIL="onboarding@resend.dev"

# -----------------------------------------------------------------------------
# File Storage (Vercel Blob)
# -----------------------------------------------------------------------------
# Vercel Blob storage token
# Setup:
#   1. Go to Vercel Dashboard → Your Project → Storage
#   2. Create a Blob Store
#   3. Copy the BLOB_READ_WRITE_TOKEN
# Used for: Document uploads, project photos
BLOB_READ_WRITE_TOKEN=""

# -----------------------------------------------------------------------------
# External APIs
# -----------------------------------------------------------------------------
# Google Maps API key for address autocomplete
# Setup:
#   1. Go to: https://console.cloud.google.com/
#   2. Create project and enable: Places API, Maps JavaScript API
#   3. Create credentials → API Key
#   4. Restrict key to your domain
NEXT_PUBLIC_GOOGLE_MAPS_API_KEY="your-google-maps-api-key-here"

# -----------------------------------------------------------------------------
# Monitoring (Production)
# -----------------------------------------------------------------------------
# Sentry DSN for error tracking (optional)
# Get from: https://sentry.io/
SENTRY_DSN=""

# =============================================================================
# NOTES
# =============================================================================
# - All NEXT_PUBLIC_ variables are exposed to the browser
# - Never expose sensitive keys with NEXT_PUBLIC_ prefix
# - For CI/CD, set secrets in GitHub Actions secrets
# - For production, set in Vercel dashboard environment variables
# =============================================================================
